1. DotNet Conf 2022 Keynote

-- REST APIs with .NET 7: Minimal APIs(11:41) --

https://learn.microsoft.com/en-us/aspnet/core/tutorials/min-web-api?view=aspnetcore-7.0&tabs=visual-studio

1.1. MinimalApis_MapGroup project 

Create a Empty Project

ALT + ~ (open Package Manager Console)
Install-Package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
Install-Package Microsoft.EntityFrameworkCore.InMemory

class Todo
{
    public int Id { get; set; }
    public string? Name { get; set; }
    public bool IsComplete { get; set; }
}


1.2. MinimalApis_MapGroup2 project

-> create a MinimalApi project
-> add ScaffoldItem: right click on project -> Add -> New Scaffold Item ->
					 API with read/write endpoints, using EF

-> creates groups of routes that share a common prefix

Error:
MinimalAPI - Did you mean to register the "Body (Inferred)" parameter(s) as a Service 
or apply the [FromService] or [FromBody] attribute?


Solution:
-> add [FromBody] to the class MinimalApis2Context
https://stackoverflow.com/questions/71609874/minimalapi-did-you-mean-to-register-the-body-inferred-parameters-as-a-se


-- WeatherForecastEndpoints.cs --

group.MapGet("/", async ([FromBody] MinimalApis2Context db) =>
    {
        return await db.WeatherForecast.ToListAsync();
    })
    .WithName("GetAllWeatherForecasts")
    .WithOpenApi()
    .Produces<List<WeatherForecast>>(StatusCodes.Status200OK);



1.3. RateLimiter(16:45)

-> allow to configure rules that limites the number of requests 
that can be send to the app over a fixed time window

EX:
// Rate-Limiting and output caching-related services
builder.Services.AddRateLimiter(_ => _.AddFixedWindowLimiter("policyName", options =>
{
    options.PermitLimit = 5;
    options.QueueProcessingOrder = QueueProcessingOrder.OldestFirst;
    options.QueueLimit = 0;
    options.Window = TimeSpan.FromSeconds(2);
    options.AutoReplenishment = false;
}));

https://devblogs.microsoft.com/dotnet/announcing-rate-limiting-for-dotnet/


1.4. Dev Tunnels(25:20)

https://learn.microsoft.com/en-us/connectors/custom-connectors/port-tunneling
https://devblogs.microsoft.com/visualstudio/public-preview-of-dev-tunnels-in-visual-studio-for-asp-net-core-projects/
https://www.twilio.com/blog/use-visual-studio-port-tunneling-with-twilio-webhooks
https://github.com/microsoft/dev-tunnels

-- MinimalApis_MapGroup2 -> launchSettings.json --
"profiles": {
    "http": {
        "commandName": "Project",
        "dotnetRunMessages": true,
        "launchBrowser": true,
        "launchUrl": "swagger",
        "applicationUrl": "http://localhost:5085",
        "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
        },
        "devTunnelEnabled": true,
        "devTunnelAccess":  "public"
    },